max_subarray is not fast

add_binary:
Runtime: 16 ms, faster than 5.77% of C++ online submissions for Add Binary.
Memory Usage: 10.6 MB, less than 5.57% of C++ online submissions for Add Binary.

climb stairs:
44 / 45 test cases passed.
Status: Time Limit Exceeded
Submitted: 0 minutes ago
Last executed input:26

rm_dup_from_sort_list:
Runtime: 12 ms, faster than 100.00% of C++ online submissions for Remove Duplicates from Sorted List.
Memory Usage: 9.3 MB, less than 21.04% of C++ online submissions for Remove Duplicates from Sorted List.

merge_sort_array:
Runtime: 8 ms, faster than 92.35% of C++ online submissions for Merge Sorted Array.
Memory Usage: 9 MB, less than 79.56% of C++ online submissions for Merge Sorted Array.

same tree:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Same Tree.
Memory Usage: 10.1 MB, less than 78.39% of C++ online submissions for Same Tree.

symmetric tree:
Runtime: 12 ms, faster than 97.29% of C++ online submissions for Symmetric Tree.
Memory Usage: 15.9 MB, less than 51.26% of C++ online submissions for Symmetric Tree.

max_depth_tree:
Runtime: 16 ms, faster than 99.17% of C++ online submissions for Maximum Depth of Binary Tree.
Memory Usage: 19.2 MB, less than 84.29% of C++ online submissions for Maximum Depth of Binary Tree.

tree_level_order_traversal_II:
Runtime: 12 ms, faster than 69.14% of C++ online submissions for Binary Tree Level Order Traversal II.
Memory Usage: 14.5 MB, less than 32.42% of C++ online submissions for Binary Tree Level Order Traversal II.

balanced_binary_tree:
Runtime: 16 ms, faster than 99.70% of C++ online submissions for Balanced Binary Tree.
Memory Usage: 16.6 MB, less than 96.54% of C++ online submissions for Balanced Binary Tree.

min_depth_tree:
Runtime: 16 ms, faster than 99.44% of C++ online submissions for Minimum Depth of Binary Tree.
Memory Usage: 19.6 MB, less than 80.00% of C++ online submissions for Minimum Depth of Binary Tree.

path_sum:
Runtime: 16 ms, faster than 99.92% of C++ online submissions for Path Sum.
Memory Usage: 19.7 MB, less than 90.91% of C++ online submissions for Path Sum.

pascal_triangle:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Pascal's Triangle.
Memory Usage: 8.8 MB, less than 52.17% of C++ online submissions for Pascal's Triangle.

pascal_triangle_II:
Runtime: 8 ms, faster than 16.01% of C++ online submissions for Pascal's Triangle II.
Memory Usage: 8.8 MB, less than 14.22% of C++ online submissions for Pascal's Triangle II.

best_time_buy_sell_stock:
Runtime: 848 ms, faster than 8.19% of C++ online submissions for Best Time to Buy and Sell Stock.
Memory Usage: 9.4 MB, less than 79.55% of C++ online submissions for Best Time to Buy and Sell Stock.

best_time_buy_sell_stock_II:
Runtime: 16 ms, faster than 10.45% of C++ online submissions for Best Time to Buy and Sell Stock II.
Memory Usage: 9.5 MB, less than 52.45% of C++ online submissions for Best Time to Buy and Sell Stock II.

valid_palindrome:
Runtime: 488 ms, faster than 5.04% of C++ online submissions for Valid Palindrome.
Memory Usage: 9.2 MB, less than 41.53% of C++ online submissions for Valid Palindrome.

single_number:
Runtime: 584 ms, faster than 5.15% of C++ online submissions for Single Number.
Memory Usage: 9.6 MB, less than 81.87% of C++ online submissions for Single Number.

linked_list_cycle:
Runtime: 12 ms, faster than 99.54% of C++ online submissions for Linked List Cycle.
Memory Usage: 9.6 MB, less than 96.41% of C++ online submissions for Linked List Cycle.

min_stack:
Runtime: 320 ms, faster than 5.37% of C++ online submissions for Min Stack.
Memory Usage: 16.9 MB, less than 66.67% of C++ online submissions for Min Stack.

intersection_of_two_linked_lists:
Runtime: 68 ms, faster than 22.17% of C++ online submissions for Intersection of Two Linked Lists.
Memory Usage: 19.1 MB, less than 14.04% of C++ online submissions for Intersection of Two Linked Lists.

add_two_sum_II:
Runtime: 220 ms, faster than 10.20% of C++ online submissions for Two Sum II - Input array is sorted.
Memory Usage: 9.3 MB, less than 99.52% of C++ online submissions for Two Sum II - Input array is sorted.

excel_sheet_column_title:
Runtime: 8 ms, faster than 100.00% of C++ online submissions for Excel Sheet Column Title.
Memory Usage: 8 MB, less than 77.57% of C++ online submissions for Excel Sheet Column Title.

majority_element:
Runtime: 20 ms, faster than 98.97% of C++ online submissions for Majority Element.
Memory Usage: 11.1 MB, less than 92.48% of C++ online submissions for Majority Element.

excel_sheet_column_num:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Excel Sheet Column Number.
Memory Usage: 8.1 MB, less than 65.99% of C++ online submissions for Excel Sheet Column Number.

factorial_trailing_zeroes:
500 / 502 test cases passed.
Status: Time Limit Exceeded

rotate_array:
Runtime: 268 ms, faster than 22.28% of C++ online submissions for Rotate Array.
Memory Usage: 9.7 MB, less than 17.05% of C++ online submissions for Rotate Array

reverse_bit:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Reverse Bits.
Memory Usage: 7.8 MB, less than 97.32% of C++ online submissions for Reverse Bits.

numbers of 1 bits:
Runtime: 12 ms, faster than 44.08% of C++ online submissions for Number of 1 Bits.
Memory Usage: 8.2 MB, less than 36.97% of C++ online submissions for Number of 1 Bits.

house_robber:
Time Limit Exceeded

remove_linked_list_elements:
Runtime: 28 ms, faster than 99.75% of C++ online submissions for Remove Linked List Elements.
Memory Usage: 10.8 MB, less than 100.00% of C++ online submissions for Remove Linked List Elements.

count primes:
Time Limit Exceeded

isIsomorphic_string:
Runtime: 16 ms, faster than 36.36% of C++ online submissions for Isomorphic Strings.
Memory Usage: 10.7 MB, less than 5.26% of C++ online submissions for Isomorphic Strings.

reverse_linked_list:
Runtime: 8 ms, faster than 100.00% of C++ online submissions for Reverse Linked List.
Memory Usage: 9 MB, less than 92.33% of C++ online submissions for Reverse Linked List.

contains_duplicate:
Runtime: 60 ms, faster than 23.98% of C++ online submissions for Contains Duplicate.
Memory Usage: 16.6 MB, less than 25.88% of C++ online submissions for Contains Duplicate.

contains_duplicate_II:
Runtime: 84 ms, faster than 10.99% of C++ online submissions for Contains Duplicate II.
Memory Usage: 24.6 MB, less than 5.20% of C++ online submissions for Contains Duplicate II.

Implement Stack using Queues:
TBD: compile error

invert_binary_tree:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Invert Binary Tree.
Memory Usage: 9.2 MB, less than 40.49% of C++ online submissions for Invert Binary Tree.

power_of_two:
Runtime: 12 ms, faster than 43.92% of C++ online submissions for Power of Two.
Memory Usage: 7.9 MB, less than 98.72% of C++ online submissions for Power of Two.

palindrome_linked_list:
Runtime: 28 ms, faster than 49.28% of C++ online submissions for Palindrome Linked List.
Memory Usage: 13.3 MB, less than 27.34% of C++ online submissions for Palindrome Linked List.

lowest_common_ancestor_BST:
Runtime: 68 ms, faster than 13.09% of C++ online submissions for Lowest Common Ancestor of a Binary Search Tree.
Memory Usage: 25.9 MB, less than 33.46% of C++ online submissions for Lowest Common Ancestor of a Binary Search Tree.

delete_node_in_linked_list:
Runtime: 12 ms, faster than 100.00% of C++ online submissions for Delete Node in a Linked List.
Memory Usage: 9.2 MB, less than 31.52% of C++ online submissions for Delete Node in a Linked List.

valid anagram:
Runtime: 20 ms, faster than 45.39% of C++ online submissions for Valid Anagram.
Memory Usage: 9.6 MB, less than 5.16% of C++ online submissions for Valid Anagram.

binary_tree_paths:
Runtime: 8 ms, faster than 94.81% of C++ online submissions for Binary Tree Paths.
Memory Usage: 12.2 MB, less than 86.63% of C++ online submissions for Binary Tree Paths.

add_digits:
Runtime: 8 ms, faster than 43.04% of C++ online submissions for Add Digits.
Memory Usage: 8.5 MB, less than 7.44% of C++ online submissions for Add Digits.

ugly_number:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Ugly Number.
Memory Usage: 8 MB, less than 60.68% of C++ online submissions for Ugly Number.

missing number:
Runtime: 24 ms, faster than 98.14% of C++ online submissions for Missing Number.
Memory Usage: 9.6 MB, less than 97.81% of C++ online submissions for Missing Number.

first_bad_version:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for First Bad Version.
Memory Usage: 8.2 MB, less than 38.58% of C++ online submissions for First Bad Version.

move_zeroes:
Runtime: 20 ms, faster than 36.47% of C++ online submissions for Move Zeroes.
Memory Usage: 9.4 MB, less than 99.61% of C++ online submissions for Move Zeroes.

word_pattern:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Word Pattern.
Memory Usage: 9.5 MB, less than 5.56% of C++ online submissions for Word Pattern.

nim_game:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Nim Game.
Memory Usage: 8 MB, less than 84.31% of C++ online submissions for Nim Game.

range_sum_query_immutable:
Runtime: 180 ms, faster than 17.46% of C++ online submissions for Range Sum Query - Immutable.
Memory Usage: 17.2 MB, less than 56.79% of C++ online submissions for Range Sum Query - Immutable.

power_of_three:
Runtime: 52 ms, faster than 96.94% of C++ online submissions for Power of Three.
Memory Usage: 8 MB, less than 68.42% of C++ online submissions for Power of Three.

power_of_four:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Power of Four.
Memory Usage: 8 MB, less than 67.61% of C++ online submissions for Power of Four.

reverse_string:
Runtime: 60 ms, faster than 47.16% of C++ online submissions for Reverse String.
Memory Usage: 15.1 MB, less than 99.59% of C++ online submissions for Reverse String.

reverse_vowels_of_string:
Runtime: 588 ms, faster than 5.33% of C++ online submissions for Reverse Vowels of a String.
Memory Usage: 317.4 MB, less than 5.34% of C++ online submissions for Reverse Vowels of a String.

intersection_of_two_arrays:
Runtime: 12 ms, faster than 51.37% of C++ online submissions for Intersection of Two Arrays.
Memory Usage: 9.6 MB, less than 21.37% of C++ online submissions for Intersection of Two Arrays.

intersection_of_two_arrays:
Runtime: 68 ms, faster than 15.32% of C++ online submissions for Intersection of Two Arrays II.
Memory Usage: 10.9 MB, less than 5.10% of C++ online submissions for Intersection of Two Arrays II.

valid_perfect_square:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Valid Perfect Square.
Memory Usage: 7.9 MB, less than 96.93% of C++ online submissions for Valid Perfect Square.

add_two_int_without_+-:
good refer: https://leetcode.com/problems/sum-of-two-integers/discuss/84278/A-summary%3A-how-to-use-bit-manipulation-to-solve-problems-easily-and-efficiently

guess_number_higher_lower:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Guess Number Higher or Lower.
Memory Usage: 8.1 MB, less than 51.49% of C++ online submissions for Guess Number Higher or Lower.

ransom_note:
I dont get means ...

first_unique_char_in_string:
Runtime: 88 ms, faster than 14.53% of C++ online submissions for First Unique Character in a String.
Memory Usage: 17 MB, less than 5.03% of C++ online submissions for First Unique Character in a String.

find_difference:
Runtime: 8 ms, faster than 61.74% of C++ online submissions for Find the Difference.
Memory Usage: 9 MB, less than 97.52% of C++ online submissions for Find the Difference.

Nth_digit:
good refer:https://leetcode.com/problems/nth-digit/discuss/88369/0ms-C%2B%2B-Solution-with-Detail-Explanation

binary_watch:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Binary Watch.
Memory Usage: 9 MB, less than 34.61% of C++ online submissions for Binary Watch.

sum_of_left_leaves:
Runtime: 8 ms, faster than 100.00% of C++ online submissions for Sum of Left Leaves.
Memory Usage: 13.4 MB, less than 100.00% of C++ online submissions for Sum of Left Leaves.

convert_num2hex:
Runtime: 4 ms, faster than 100.00% of C++ online submissions for Convert a Number to Hexadecimal.
Memory Usage: 8.1 MB, less than 100.00% of C++ online submissions for Convert a Number to Hexadecimal.

longest_palindrome:
Runtime: 8 ms, faster than 75.27% of C++ online submissions for Longest Palindrome.
Memory Usage: 9 MB, less than 100.00% of C++ online submissions for Longest Palindrome.

fizz_buzz:
Runtime: 8 ms, faster than 100.00% of C++ online submissions for Fizz Buzz.
Memory Usage: 10.3 MB, less than 68.54% of C++ online submissions for Fizz Buzz.

third_max_num:
Runtime: 16 ms, faster than 33.36% of C++ online submissions for Third Maximum Number.
Memory Usage: 10.4 MB, less than 35.48% of C++ online submissions for Third Maximum Number.

add_strings:
Runtime: 20 ms, faster than 49.82% of C++ online submissions for Add Strings.
Memory Usage: 9.1 MB, less than 100.00% of C++ online submissions for Add Strings.

construct_quad_tree:
Runtime: 152 ms, faster than 53.09% of C++ online submissions for Construct Quad Tree.
Memory Usage: 34.5 MB, less than 52.08% of C++ online submissions for Construct Quad Tree.

n-ary_tree_level_order_traversal:
Runtime: 164 ms, faster than 58.85% of C++ online submissions for N-ary Tree Level Order Traversal.
Memory Usage: 34.6 MB, less than 5.30% of C++ online submissions for N-ary Tree Level Order Traversal.

number_of_segments_in_string:
Runtime: 8 ms, faster than 8.14% of C++ online submissions for Number of Segments in a String.
Memory Usage: 8.4 MB, less than 96.61% of C++ online submissions for Number of Segments in a String.

path_sum_III:
Runtime: 28 ms, faster than 72.47% of C++ online submissions for Path Sum III.
Memory Usage: 14.5 MB, less than 100.00% of C++ online submissions for Path Sum III.

find_all_anagrams_in_string:
34 / 36 test cases passed. Time Limit Exceeded
add good solution:
https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/92027/C%2B%2B-O(n)-sliding-window-concise-solution-with-explanation

arranging_coins:
Runtime: 12 ms, faster than 88.00% of C++ online submissions for Arranging Coins.
Memory Usage: 8.4 MB, less than 98.96% of C++ online submissions for Arranging Coins.

string_compression:
Runtime: 8 ms, faster than 100.00% of C++ online submissions for String Compression.
Memory Usage: 9.4 MB, less than 96.80% of C++ online submissions for String Compression.

find_all_disappeared_in_array:
Runtime: 116 ms, faster than 96.33% of C++ online submissions for Find All Numbers Disappeared in an Array.
Memory Usage: 15.1 MB, less than 77.44% of C++ online submissions for Find All Numbers Disappeared in an Array.

min_mv_to_equal_array_ele:
Runtime: 48 ms, faster than 87.70% of C++ online submissions for Minimum Moves to Equal Array Elements.
Memory Usage: 11 MB, less than 100.00% of C++ online submissions for Minimum Moves to Equal Array Elements.

assign cookies:
20 / 21 test cases passed.
last test case Last executed, but my alg worked! 

repeated_substring_pattern:
Runtime: 28 ms, faster than 96.57% of C++ online submissions for Repeated Substring Pattern.
Memory Usage: 11.6 MB, less than 92.66% of C++ online submissions for Repeated Substring Pattern.

hamming distance:
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Hamming Distance.
Memory Usage: 8.3 MB, less than 54.72% of C++ online submissions for Hamming Distance

island_perimeter:
Runtime: 60 ms, faster than 98.05% of C++ online submissions for Island Perimeter.
Memory Usage: 16.2 MB, less than 70.07% of C++ online submissions for Island Perimeter..

heaters:
Time Limit Exceeded
28 / 30 test cases passed.

number_complement:
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Number Complement.
Memory Usage: 8.4 MB, less than 54.22% of C++ online submissions for Number Complement.

license_key_fomatting:
Runtime: 264 ms, faster than 11.07% of C++ online submissions for License Key Formatting.
Memory Usage: 10.4 MB, less than 82.06% of C++ online submissions for License Key Formatting.

max_consecutive_ones:
Runtime: 36 ms, faster than 93.32% of C++ online submissions for Max Consecutive Ones.
Memory Usage: 11.8 MB, less than 59.14% of C++ online submissions for Max Consecutive Ones.

construct_rectangle:
Runtime: 264 ms, faster than 5.09% of C++ online submissions for Construct the Rectangle.
Memory Usage: 8.2 MB, less than 83.21% of C++ online submissions for Construct the Rectangle.

next_greater_element_I:
Runtime: 8 ms, faster than 99.21% of C++ online submissions for Next Greater Element I.
Memory Usage: 9.5 MB, less than 28.83% of C++ online submissions for Next Greater Element I.

keyboard_row:
Runtime: 4 ms, faster than 82.67% of C++ online submissions for Keyboard Row.
Memory Usage: 8.4 MB, less than 75.98% of C++ online submissions for Keyboard Row.

find_mode_in_BST:
Runtime: 28 ms, faster than 75.93% of C++ online submissions for Find Mode in Binary Search Tree.
Memory Usage: 25.2 MB, less than 36.35% of C++ online submissions for Find Mode in Binary Search Tree.

base_7
100% perf
40% mem

relative_ranks:
Runtime: 316 ms, faster than 5.06% of C++ online submissions for Relative Ranks.
Memory Usage: 11.7 MB, less than 51.81% of C++ online submissions for Relative Ranks.

perfect_number:
Runtime: 1336 ms, faster than 14.93% of C++ online submissions for Perfect Number.
Memory Usage: 7.9 MB, less than 95.34% of C++ online submissions for Perfect Number.

fibonacci_number:
Runtime: 20 ms, faster than 6.43% of C++ online submissions for Fibonacci Number.
Memory Usage: 8.3 MB, less than 49.83% of C++ online submissions for Fibonacci Number.

detect_capital:
Runtime: 4 ms, faster than 80.09% of C++ online submissions for Detect Capital.
Memory Usage: 8.1 MB, less than 75.75% of C++ online submissions for Detect Capital.

longest_uncommon_subseqence:
38 / 41 test cases passed.
Status: Wrong Answer

Submitted: 0 minutes ago
Input: 
""
""
Output: 
0
Expected: 
-1
I think this answer is not right, a is also a subseqence of aaa. so there is no common.

min_absolute_diff_in_BST:
Runtime: 32 ms, faster than 19.33% of C++ online submissions for Minimum Absolute Difference in BST.
Memory Usage: 25.1 MB, less than 5.28% of C++ online submissions for Minimum Absolute Difference in BST.

k-diff_pairs_in_array:
Runtime: 60 ms, faster than 16.88% of C++ online submissions for K-diff Pairs in an Array.
Memory Usage: 16 MB, less than 5.03% of C++ online submissions for K-diff Pairs in an Array.

convert_BST_to_greater_Tree:
Runtime: 632 ms, faster than 5.49% of C++ online submissions for Convert BST to Greater Tree.
Memory Usage: 27.2 MB, less than 5.09% of C++ online submissions for Convert BST to Greater Tree.

reverse_str_II:
Runtime: 8 ms, faster than 80.84% of C++ online submissions for Reverse String II.
Memory Usage: 9.5 MB, less than 68.97% of C++ online submissions for Reverse String II

diameter of binary tree:
Runtime: 8 ms, faster than 96.12% of C++ online submissions for Diameter of Binary Tree.
Memory Usage: 19.3 MB, less than 96.63% of C++ online submissions for Diameter of Binary Tree..

/student_attendance_record_I$
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Student Attendance Record I.
Memory Usage: 8.4 MB, less than 52.38% of C++ online submissions for Student Attendance Record I.

reverse_words_in_string_III:
Runtime: 20 ms, faster than 90.71% of C++ online submissions for Reverse Words in a String III.
Memory Usage: 12 MB, less than 45.24% of C++ online submissions for Reverse Words in a String III.

maximux_depth_Nary_tree:
Runtime: 132 ms, faster than 96.29% of C++ online submissions for Maximum Depth of N-ary Tree.
Memory Usage: 31.8 MB, less than 91.13% of C++ online submissions for Maximum Depth of N-ary Tree.

array_partition_I:
Runtime: 132 ms, faster than 9.77% of C++ online submissions for Array Partition I.
Memory Usage: 24.5 MB, less than 5.26% of C++ online submissions for Array Partition I.
remember to use "sort", then 71% perf, 93% mem

binary_tree_tilt:
Runtime: 32 ms, faster than 24.68% of C++ online submissions for Binary Tree Tilt.
Memory Usage: 21.6 MB, less than 85.64% of C++ online submissions for Binary Tree Tilt.

reshape_the_matrix:
Runtime: 56 ms, faster than 5.91% of C++ online submissions for Reshape the Matrix.
Memory Usage: 12.3 MB, less than 23.79% of C++ online submissions for Reshape the Matrix.

Subtree_of_another_tree:
Runtime: 28 ms, faster than 82.65% of C++ online submissions for Subtree of Another Tree.
Memory Usage: 20.8 MB, less than 88.41% of C++ online submissions for Subtree of Another Tree.

distribute_candies:
Runtime: 340 ms, faster than 34.50% of C++ online submissions for Distribute Candies.
Memory Usage: 41.4 MB, less than 81.23% of C++ online submissions for Distribute Candies

shortest_unsorted_cont_subarray:
Runtime: 96 ms, faster than 6.49% of C++ online submissions for Shortest Unsorted Continuous Subarray.
Memory Usage: 20.8 MB, less than 5.15% of C++ online submissions for Shortest Unsorted Continuous Subarray.

N-ary_tree_preorder_traveral:
Runtime: 156 ms, faster than 53.25% of C++ online submissions for N-ary Tree Preorder Traversal.
Memory Usage: 32.3 MB, less than 91.09% of C++ online submissions for N-ary Tree Preorder Traversal..

N-ary_tree_postorder_traveral:
Runtime: 144 ms, faster than 93.31% of C++ online submissions for N-ary Tree Postorder Traversal.
Memory Usage: 32.5 MB, less than 69.29% of C++ online submissions for N-ary Tree Postorder Traversal.

longest_H_S:
Runtime: 260 ms, faster than 5.46% of C++ online submissions for Longest Harmonious Subsequence.
Memory Usage: 20.7 MB, less than 50.00% of C++ online submissions for Longest Harmonious Subsequence.

range_addition_II:
Runtime: 8 ms, faster than 92.35% of C++ online submissions for Range Addition II.
Memory Usage: 11.5 MB, less than 88.89% of C++ online submissions for Range Addition II.

min_index_sum_of_two_list:
Runtime: 168 ms, faster than 5.68% of C++ online submissions for Minimum Index Sum of Two Lists.
Memory Usage: 21.2 MB, less than 100.00% of C++ online submissions for Minimum Index Sum of Two Lists.

can_place_flowers:
Runtime: 16 ms, faster than 84.65% of C++ online submissions for Can Place Flowers.
Memory Usage: 10.2 MB, less than 100.00% of C++ online submissions for Can Place Flowers.

construct_string_from_binary_tree:
Runtime: 8 ms, faster than 99.86% of C++ online submissions for Construct String from Binary Tree.
Memory Usage: 20.8 MB, less than 100.00% of C++ online submissions for Construct String from Binary Tree.

merge_two_binary_trees:
Runtime: 44 ms, faster than 24.76% of C++ online submissions for Merge Two Binary Trees.
Memory Usage: 21.2 MB, less than 19.44% of C++ online submissions for Merge Two Binary Trees.

max_product_of_three_num:
Runtime: 88 ms, faster than 6.30% of C++ online submissions for Maximum Product of Three Numbers.
Memory Usage: 19.7 MB, less than 6.67% of C++ online submissions for Maximum Product of Three Numbers.

sum_of_square_num:
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Sum of Square Numbers.
Memory Usage: 8.1 MB, less than 83.33% of C++ online submissions for Sum of Square Numbers.

average_of_levels_in_binary_tree:
Runtime: 24 ms, faster than 41.54% of C++ online submissions for Average of Levels in Binary Tree.
Memory Usage: 23.6 MB, less than 11.11% of C++ online submissions for Average of Levels in Binary Tree.

max_average_subarray_I:
Runtime: 168 ms, faster than 93.06% of C++ online submissions for Maximum Average Subarray I.
Memory Usage: 16.8 MB, less than 100.00% of C++ online submissions for Maximum Average Subarray I.

set_mismatch:
Runtime: 104 ms, faster than 9.58% of C++ online submissions for Set Mismatch.
Memory Usage: 22.2 MB, less than 25.00% of C++ online submissions for Set Mismatch.

two_sum_IV-input is a BST:
Runtime: 44 ms, faster than 54.66% of C++ online submissions for Two Sum IV - Input is a BST.
Memory Usage: 26.2 MB, less than 35.00% of C++ online submissions for Two Sum IV - Input is a BST.

robot_return_to_origin:
Runtime: 12 ms, faster than 97.16% of C++ online submissions for Robot Return to Origin.
Memory Usage: 10.2 MB, less than 73.17% of C++ online submissions for Robot Return to Origin.

image_smoother:
Runtime: 152 ms, faster than 49.34% of C++ online submissions for Image Smoother.
Memory Usage: 17.8 MB, less than 50.00% of C++ online submissions for Image Smoother.

non_decreasing_array:
Runtime: 24 ms, faster than 97.44% of C++ online submissions for Non-decreasing Array.
Memory Usage: 10.3 MB, less than 85.00% of C++ online submissions for Non-decreasing Array.

trim_BST:
Runtime: 24 ms, faster than 34.74% of C++ online submissions for Trim a Binary Search Tree.
Memory Usage: 21.8 MB, less than 5.26% of C++ online submissions for Trim a Binary Search Tree.

second_min_node_in_BST:
Runtime: 4 ms, faster than 55.41% of C++ online submissions for Second Minimum Node In a Binary Tree.
Memory Usage: 8.7 MB, less than 35.71% of C++ online submissions for Second Minimum Node In a Binary Tree.

longest_cont_increasing_subseq:
Runtime: 16 ms, faster than 57.06% of C++ online submissions for Longest Continuous Increasing Subsequence.
Memory Usage: 9.3 MB, less than 88.89% of C++ online submissions for Longest Continuous Increasing Subsequence.

valid_palindrome_II:
Runtime: 116 ms, faster than 12.62% of C++ online submissions for Valid Palindrome II.
Memory Usage: 32.3 MB, less than 9.09% of C++ online submissions for Valid Palindrome II.

baseball_game:
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Baseball Game.
Memory Usage: 10 MB, less than 12.50% of C++ online submissions for Baseball Game.

repeated_string_match:
Runtime: 4 ms, faster than 98.07% of C++ online submissions for Repeated String Match.
Memory Usage: 8.7 MB, less than 100.00% of C++ online submissions for Repeated String Match.

employee_importance:
Runtime: 44 ms, faster than 14.00% of C++ online submissions for Employee Importance.
Memory Usage: 37.2 MB, less than 28.57% of C++ online submissions for Employee Importance.

binary_num_with_alternating_bits:
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Binary Number with Alternating Bits.
Memory Usage: 8.1 MB, less than 100.00% of C++ online submissions for Binary Number with Alternating Bits.

count_binary_substrings:
86 / 90 test cases passed.
Status: Time Limit Exceeded 
Actually, the algorithm is work, but for the big data, the perf is so low.

degree_of_an_array:
Runtime: 44 ms, faster than 66.37% of C++ online submissions for Degree of an Array.
Memory Usage: 14.8 MB, less than 36.36% of C++ online submissions for Degree of an Array.

search_in_BST:
Runtime: 48 ms, faster than 87.07% of C++ online submissions for Search in a Binary Search Tree.
Memory Usage: 28.9 MB, less than 97.56% of C++ online submissions for Search in a Binary Search Tree.
